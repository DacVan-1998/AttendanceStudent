@{
    ViewBag.Title = "Roll Call Management";
    Layout = "_Layout";
}
<style>

    th,td{
        vertical-align: middle;
    }
   body{
     background: #F4F7FD;
     margin-top:20px;
   }
   
   .rollcall-list .rollcall-item {
     padding: 1rem 1.9rem;
     margin: 0 0.9375rem 1.875rem 0.9375rem;
     background-color: #ffffff;
     border-radius: 8px;
     box-shadow: 0px 0px 10px 0px rgba(82, 63, 105, 0.1);
     -webkit-box-shadow: 0px 0px 10px 0px rgba(82, 63, 105, 0.1);
     -moz-box-shadow: 0px 0px 10px 0px rgba(82, 63, 105, 0.1);
     -ms-box-shadow: 0px 0px 10px 0px rgba(82, 63, 105, 0.1);
   }
   
   .rollcall-list .rollcall-item.featured {
     border: 1.5px solid #68cbd7;
   }
   
   .rollcall-list .rollcall-item .rollcall-schedule {
     color: #3c4142;
     margin-bottom: 0.625rem;
     justify-content: space-around;
     align-items: center;
   }
   
   .rollcall-list .rollcall-item .rollcall-schedule .event-icon {
     stroke-width: 1px;
     width: 1.125rem;
     height: 1.125rem;
     margin: 0.6875rem 1rem 0 0;
   }
   
   .rollcall-list .rollcall-item .rollcall-schedule .event-day {
     font-size: 40px;
     font-weight: 50;
     margin-right: 0.2rem;
     line-height: 100%;
   }
   
   .rollcall-list .rollcall-item .rollcall-schedule .event-month-time {
     font-weight: 200;
     font-size: 22px;
     display: flex;
     line-height: 118%;
     flex-direction: column;
     justify-content: center;
   }
   
   .rollcall-list .rollcall-item .rollcall-schedule .event-month-time span {
     display: block;
     text-transform: uppercase;
   }
   
   .rollcall-list .rollcall-item .class-name {
     display: block;
     margin-bottom: 0.625rem;
     font-size: x-large;
     font-weight: 300;
     color: #3c4142;
   }
   
   .rollcall-list .rollcall-item .class-name:hover {
     color: #68cbd7;
     text-decoration: none;
     cursor: default;
   }
   
   .rollcall-list .rollcall-item .subject-name {
     color: #b1bac5;
     margin-bottom: 0.625rem;
     font-size: large;
     font-weight: 300;
   }
   .rollcall-list .rollcall-item .subject-name:hover {
     color: #68cbd7;
     text-decoration: none;
     cursor: default;
   }
   
   .rollcall-list .rollcall-item .student-list {
     padding: 0;
     margin: 0;
     justify-content: center;
   }
   
   .rollcall-list .rollcall-item .student-list .student {
     width: 48px;
     cursor: pointer;
     display: flex;
     align-items: center;
     justify-content: center;
     border-radius: 50%;
     border: 2px solid #ffffff;
   }
   
   .rollcall-list .rollcall-item .student-list .student .student-inital {
     font-size: 13px;
     line-height: 100%;
   }
   
   .rollcall-list .rollcall-item .student-list {
     display: flex !important;
   }
   
   .rollcall-list .rollcall-item .student-list .student .student-pic {
     width: 100%;
     border-radius: 50%;
   }
   
   .rollcall-list .rollcall-item .student-list li + li {
     margin-left: -10px;
   }
   
   
   .rollcall-list .rollcall-item .student-list {
     flex-direction: row !important;
   }
   .rollcall-list .rollcall-item .student-list {
     padding: 0;
     margin: 0;
   }
   
   .bg-soft-primary {
     background-color: #dce3fa;
   }
   
   .bg-soft-danger {
     background-color: #fedce0;
   }
   
   .bg-soft-info {
     background-color: #d7efff;
   }
   
   .bg-soft-success {
     background-color: #d1f6f2;
   }
   
   .text-yellow {
     color: yellow;
   }
   
   .rollcall-list .rollcall-item .rollcall-schedule, .rollcall-list .rollcall-item .student-list{
     display: flex !important;
   }
   
   .text-primary, .task-list-wrapper .completed .remove {
     color: #4e73e5 !important;
   }
   
   .action {
     margin-top:20px;
   }
   
</style>
<div class="container-fluid">
    <h1 class="mt-4">Quản lý bảng điểm danh</h1>
    <ol class="breadcrumb mb-4">
        <li class="breadcrumb-item">
            <a href="/">Trang chủ</a>
        </li>
        <li class="breadcrumb-item active">Danh sách</li>
        <li class="breadcrumb-item active">
            <button type="button" class="btn btn-success" data-toggle="modal" onclick="openDialogForAdd()" id="btnCreateNew">Thêm mới</button>
        </li>
    </ol>
    <div id="item" class="row">

    </div>
    <div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title" id="myModalLabel">Thêm hoặc sửa bảng điểm danh</h4>
                </div>
                <div class="modal-body">
                    <form>
                        <div class="form-group" id="divClassId">
                            <label>Id</label>
                            <input type="text" class="form-control" id="RollCallId" placeholder="Id"/>
                        </div>
                        <div class="form-group">
                            <label>Lớp</label>
                            <select class="form-select" id="classRoom">

                            </select>
                        </div>
                        <div class="form-group">
                            <label>Môn</label>
                            <select class="form-select" id="subject">

                            </select>
                        </div>
                        <input id="startDateUtc" name="date" type="hidden">
                        <div class="form-group">
                            <label>Ngày bắt đầu</label>
                            <div class="input-group date" id="datePickerStart">
                                <input type="text" class="form-control" id="startDate">
                                <span class="input-group-append">
                                    <span class="input-group-text bg-white">
                                        <i class="bi bi-calendar3"></i>
                                    </span>
                                </span>
                            </div>
                        </div>
                        <input id="endDateUtc" name="date" type="hidden">
                        <div class="form-group">
                            <label>Ngày kết thúc</label>
                            <div class="input-group date" id="datePickerEnd">
                                <input type="text" class="form-control" id="endDate">
                                <span class="input-group-append">
                                    <span class="input-group-text bg-white">
                                        <i class="bi bi-calendar3"></i>
                                    </span>
                                </span>
                            </div>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-primary" id="btnAdd" onclick="add();">Thêm mới</button>
                    <button type="button" class="btn btn-primary" id="btnUpdate" style="display:none;" onclick="update();">Cập nhật</button>
                    <button type="button" class="btn btn-default" data-dismiss="modal" onclick="hideDialog()">Đóng</button>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
//Load Data in Table when documents is ready
$(document).ready(function () {
     $('#datePickerStart').datepicker({
         todayBtn: "linked",
         clearBtn: true,
         todayHighlight: true,
         autoclose	:true,
     }).on('changeDate', function(e){
         $('#startDateUtc').val((e.format('yyyy-mm-ddT00:00:00.000Z'))); 
     });
     
     $('#datePickerEnd').datepicker({
          todayBtn: "linked",
          clearBtn: true,
          todayHighlight: true,
          autoclose	:true,
     }).on('changeDate', function(e){
          $('#endDateUtc').val((e.format('yyyy-mm-ddT00:00:00.000Z')));
     });
     //Initially load pagenumber=1
     loadClass();
     loadSubject();
     getPageData(1,1000);
});

function openDialogForAdd(){
    $('#classRoom').val("");
    $('#subject').val("");
    $('#startTime').val("");
    $('#finishTime').val("");
    $('#btnUpdate').hide();
    $('#btnAdd').show();
    $('#classRoom').css('border-color', 'lightgrey');
    $('#subject').css('border-color', 'lightgrey');
    $('#PhoneNumber').css('border-color', 'lightgrey');
    $('#myModal').modal('show');
    $('#divClassId').hide();
}
function hideDialog(){
    $('#myModal').modal('hide');
}
//Load Data function
function getPageData(pageNum, pageSize) {
    $('#ipSearch').val("");
    $("#tblData").empty();
    $("#paged").empty();
    $.ajax({
        url: "https://localhost:5001/RollCall/List?Page="+pageNum+"&Size="+pageSize,
        type: "GET",
        contentType: "application/json;charset=utf-8",
        dataType: "json",
        success: function (data) {
            var html = '';
            var count =0;
            console.log(data);
            $.each(data.data.result, function (key, item) {
                let dayFrom =moment(item.fromDate).date();
                let monthFrom =moment().month(moment("2022/1/6").month()).format("MMM");
                let yearFrom = moment(item.fromDate).year();
                
                 let dayEnd =moment(item.endDate).date();
                 let monthEnd =moment().month(moment(item.endDate).month()).format("MMM");
                 let yearEnd = moment(item.endDate).year();
                 let student1 = item.students[0] ? item.students[0].fullName.match(/\b[A-Z]/g).join(''):"";
                 let student2 = item.students[1] ? item.students[1].fullName.match(/\b[A-Z]/g).join(''):"";
                 let student3 = item.students[2] ? item.students[2].fullName.match(/\b[A-Z]/g).join(''):"";
                 let remainStudent = item.students.length > 3 ? item.students.length-3: 0;
                console.log(yearFrom,monthFrom,dayFrom);                
                console.log(yearEnd,monthEnd,dayEnd);              
                console.log(student1);              
                console.log(student2);              
                console.log(student3);              
                console.log(remainStudent);              
                
                html += '<div class="col-6" style="text-align: center">';                                                           
                html += '<div id="rollCallDetail" class="rollcall-list">';
                html += '  <div style="width: 390px">';
                html += '    <div class="rollcall-item">';
                html += '       <div class="rollcall-schedule">';
                html += '          <svg xmlns="http://www.w3.org/2000/svg" width="30" height="30" viewBox="0 0 30 30" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-calendar event-icon" style="width: 24px;height: 24px; margin-top: 3px;margin-right: 0px;"> ';
                html += '              <rect x="3" y="4" width="18" height="18" rx="2" ry="2"></rect> ';
                html += '              <line x1="16" y1="2" x2="16" y2="6"></line>';
                html += '              <line x1="8" y1="2" x2="8" y2="6"></line>';
                html += '              <line x1="3" y1="10" x2="21" y2="10"></line>';
                html += '          </svg> ';
                html += '          <span id="day-to" class="event-day">'+dayFrom+'</span> ';
                html += '          <div class="event-month-time"> ';
                html += '               <span id="month-to">'+monthFrom+'</span>';
                html += '               <span id="year-to">'+yearFrom+'</span>';
                html += '          </div>';
                html += '          To';
                html += '          <span id="day-from" class="event-day">'+dayEnd+'</span>';
                html += '          <div class="event-month-time">';
                html += '               <span id="month-from">'+monthEnd+'</span>';
                html += '                <span id="year-from">'+yearEnd+'</span>';
                html += '          </div>';
                html += '     </div>';
                html += '     <p id="className" class="class-name">' + item.class.name + '</p>';
                html += '     <p id="subjectName" class="subject-name">' + item.subject.name + '</p>';
                html += '     <ul class="student-list">';
                html += '         <li class="student bg-soft-info" data-original-title="" title=""> <span id="student-remain" class="student-inital text-dark">+'+item.students.length+'</span>';
                html += '         </li>';
                html += '         <li class="student" data-toggle="tooltip" data-skin-class="tooltip-base" data-html="true" data-placement="top" title="" data-original-title="<b>William S</b>">';
                html += '              <img class="student-pic" src="https://bootdey.com/img/Content/avatar/avatar1.png" alt="Profile Pic"/>';
                html += '         </li>';            
                html += '     </ul>';
                html += '     <div class="action">';
                html += '         <button type="button" class="btn btn-info" onclick="getByID(\''+item.id+'\')">Sửa</button>';
                html += '         <a href="https://localhost:4001/RollCall/RollCallDetail?rollCallId=' + item.id + '" class="btn btn-success">Nhật ký</a>';
                html += '         <button type="button" class="btn btn-success" onclick="exportExcel(\''+item.id+'\')">Xuất Excel</button>';
                html += '         <button type="button" class="btn btn-danger" onclick="deleteRollCall(\''+item.id+'\')">Xóa</button>';
                html += '     </ul>';
                html += '   </div>';
                html += '  </div>';
                html += '</div>';    
                html += '</div>';
            });
            $('#item').html(html);                     
            apply_pagination(data.data.totalPages);
            // load_pagination(data.data.currentPage,data.data.totalPages);
        },
        error: function (errormessage) {
            alert(errormessage.responseText);
        }
    });
}

//Search Data function
function search() {
    let keyword =  $('#ipSearch').val();
    console.log(keyword);
    $.ajax({
        url: "https://localhost:5001/RollCall/List?&Keyword="+keyword+"&Page=1&Size=1000",
        type: "GET",
        contentType: "application/json;charset=utf-8",
        dataType: "json",
        success: function (data) {
            var html = '';
            var count =0;
            console.log(data);
            $.each(data.data.result, function (key, item) {
                count++;
                html += '<tr>';
                html += '<th scope="row">' + count + '</th>';
                html += '<td>' + item.class.name + '</td>';
                html += '<td>' + item.subject.name + '</td>';
                html += '<td>' + item.fromDate + '</td>';
                html += '<td>' + item.endDate + '</td>';
                html += '<td><a class="btn btn-success" href="RollCallDetail?RollCallId='+item.id+'" role="button">Link</a> | <button type="button" class="btn btn-info" onclick="getByID(\''+item.id+'\')">Edit</button> | <button type="button" class="btn btn-danger" onclick="deleteRollCall(\''+item.id+'\')">Delete</button></td>';
                html += '</tr>';
            });
            $('#tblData').html(html);
            apply_pagination(data.data.totalPages);
        },
        error: function (errormessage) {
            alert(errormessage.responseText);
        }
    });
}
//Add Data Function
function add() 
{
     let res = validate();
     if (res === false) {
           return false;
     }
     const classId = $("#classRoom option:selected").val();
     const subjectId = $("#subject option:selected").val();
     var rollCallObj = {
           classId:classId,
           subjectId: subjectId,
           fromDate: $("#startDateUtc").val(),
           endDate : $("#endDateUtc").val(),
       };
    $.ajax({
        url: "https://localhost:5001/RollCall",
        type: "POST",
        data: JSON.stringify(rollCallObj),
        contentType: "application/json;charset=utf-8",
        dataType: "json",
        success: function (data) {
             getPageData(1,10);
             $('#myModal').modal('hide');     
        },
        error: function (errormessage) {
            alert(errormessage.responseText);
        }
    });
}

//Function for getting the Data Based upon Employee ID
function getByID(rollCallId) {
    console.log(rollCallId);
    $.ajax({
        url: "https://localhost:5001/RollCall/" + rollCallId,
        type: "GET",
        contentType: "application/json;charset=UTF-8",
        dataType: "json",
        success: function (data) {
            console.log(data);
            $('#RollCallId').val(data.data.id);
            $("#classRoom ").val(data.data.class.id);
            $("#subject").val(data.data.subject.id);
            $('#startDate').val(data.data.fromDate);
            
            fromDate_formatted = formatDate(data.data.fromDate);
            $('#startDateUtc').val(fromDate_formatted);
                        
            $('#endDate').val(data.data.endDate);
            endDate_formatted = formatDate(data.data.endDate);
            $('#endDateUtc').val(endDate_formatted);
                        
            $('#myModal').modal('show');
            $('#divClassId').hide();
            $('#btnUpdate').show();
            $('#btnAdd').hide();
        },
        error: function (errormessage) {
            alert(errormessage.responseText);
        }
    });
}

//function for updating employee's record
function update() {
    let res = validate();
    if (res === false) {
        return false;
    }
    console.log($("#startDateUtc").val());
    console.log($("#endDateUtc").val());
    const Id = $('#RollCallId').val();
    var rollCallObj = {
        classId: $("#classRoom option:selected").val(),
        subjectId: $("#subject option:selected").val(),
        fromDate: $("#startDateUtc").val(),
        endDate : $("#endDateUtc").val(),
    };
    $.ajax({
        url: "https://localhost:5001/RollCall/" + Id,
        data: JSON.stringify(rollCallObj),
        type: "PUT",
        contentType: "application/json;charset=utf-8",
        dataType: "json",
        success: function (result) {
            getPageData(1,10);
            $('#myModal').modal('hide');     
        },
        error: function (errormessage) {
            alert(errormessage.responseText);
        }
    });
}

//function for deleting employee's record
function deleteRollCall(ID) {
    var ans = confirm("Are you sure you want to delete this Record?");
    if (ans) {
        $.ajax({
        url: "https://localhost:5001/RollCall/" + ID,
            type: "DELETE",
            contentType: "application/json;charset=UTF-8",
            dataType: "json",
            success: function (result) {
                getPageData(1,10);
            },
            error: function (errormessage) {
                alert(errormessage.responseText);
            }
        });
    }
}
function exportExcel(rollCallId) {
   $.ajax({
            url: "https://localhost:5001/RollCall/ExportRollCall/"+rollCallId,
            type: 'GET',
            contentType: "application/json;charset=utf-8",
            dataType: "json",
            success: function(result) {
                downloadExcelFile(result.data.physicalFileResult.fileDownloadName)  
            }            
        }); 
}

function downloadExcelFile(fileName) {
    let url = "https://localhost:5001/RollCall/DownloadExportFile/"+fileName;
    window.open(url,'_blank');
}
//Valdidation using jquery
function validate() {
    var isValid = true;
     
    if ($('#endDate').val().trim() === "") {
        $('#endDate').css('border-color', 'Red');
            isValid = false;
        }
    else {
        $('#endDate').css('border-color', 'lightgrey');
    }
     
    if ($('#startDate').val().trim() === "") { 
        $('#startDate').css('border-color', 'Red');
            isValid = false;
    }
    else {
        $('#startDate').css('border-color', 'lightgrey');
    }
    
     if ($('#subject').val() === "") {
         $('#subject').css('border-color', 'Red');
            isValid = false;
     }
     else {
         $('#subject').css('border-color', 'lightgrey');
     }
     
     if ($('#classRoom').val() === "") {
          $('#classRoom').css('border-color', 'Red');
              isValid = false;
     }
     else {
          $('#classRoom').css('border-color', 'lightgrey');
     }
    return isValid;
}

// Paging with twbsPagination
function apply_pagination(totalPages) {
      $('#pagination').twbsPagination({
            totalPages: totalPages,
            visiblePages: 6,
            onPageClick: function (event, page) {
                 getPageData(page,10)     
            }
      });
}

function loadClass(){           
     $.ajax({
         url: "https://localhost:5001/Class/List?Page=1&Size=1000",
         type: 'GET',
         contentType: "application/json;charset=utf-8",
         dataType: "json",
         success: function(data) {
             let html ='';
             $.each(data.data.result, function (key, item) {   
                html += '<option value="'+item.id+'">'+item.code+'</option>';                  
             });         
             $("#classRoom").append(html);
         }            
     });
}

function loadSubject(){             
     $.ajax({
         url: "https://localhost:5001/Subject/List?Page=1&Size=1000",
         type: 'GET',
         contentType: "application/json;charset=utf-8",
         dataType: "json",
         success: function(data) {
            let html ='';
            $.each(data.data.result, function (key, item) {   
                html += '<option value="'+item.id+'">'+item.code+'</option>';                  
            });                        
         $("#subject").append(html);
         }            
     });
}

function formatDate(dateTime){
     let fromDate = new Date(dateTime);
     let date = "" ;
     let month = "" ;
     if ( fromDate.getDate() < 10 ) 
         date = "0"+fromDate.getDate();
     else 
         date = fromDate.getDate();
     
     if ( fromDate.getMonth() < 10 ) 
         month = "0"+(fromDate.getMonth()+1);
     else 
         month = fromDate.getMonth()+1;
        
     console.log(month)
     return fromDate.getFullYear() + "-" + month + "-" +date+"T00:00:00.000Z";     
}
</script>