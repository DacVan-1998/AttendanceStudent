// <auto-generated />
using System;
using AttendanceStudent.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AttendanceStudent.Database.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20220106042306_Update relationship with RollCall and AttendanceLog")]
    partial class UpdaterelationshipwithRollCallandAttendanceLog
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AttendanceStudent.Models.AttendanceLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("AttendanceDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("AttendanceTime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RollCallId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RollCallId");

                    b.ToTable("AttendanceLogs");
                });

            modelBuilder.Entity("AttendanceStudent.Models.AttendanceLogImage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AttendanceLogId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ContentType")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("OriginalName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(255)");

                    b.Property<long>("Size")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("AttendanceLogId");

                    b.HasIndex("Name");

                    b.ToTable("AttendanceLog_Images");
                });

            modelBuilder.Entity("AttendanceStudent.Models.AttendanceStudent", b =>
                {
                    b.Property<Guid>("StudentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AttendanceLogId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsPresent")
                        .HasColumnType("bit");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("StudentId", "AttendanceLogId");

                    b.HasIndex("AttendanceLogId");

                    b.HasIndex("StudentId", "AttendanceLogId");

                    b.ToTable("AttendanceStudents");
                });

            modelBuilder.Entity("AttendanceStudent.Models.Class", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.ToTable("Classes");
                });

            modelBuilder.Entity("AttendanceStudent.Models.RollCall", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ClassId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FromDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("SubjectId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ClassId");

                    b.HasIndex("SubjectId");

                    b.ToTable("RollCalls");
                });

            modelBuilder.Entity("AttendanceStudent.Models.Student", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("StudentCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Email");

                    b.HasIndex("StudentCode")
                        .IsUnique();

                    b.ToTable("Students");
                });

            modelBuilder.Entity("AttendanceStudent.Models.StudentImage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ContentType")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("OriginalName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(255)");

                    b.Property<long>("Size")
                        .HasColumnType("bigint");

                    b.Property<Guid>("StudentId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("Name");

                    b.HasIndex("StudentId");

                    b.ToTable("Student_Images");
                });

            modelBuilder.Entity("AttendanceStudent.Models.StudentRollCall", b =>
                {
                    b.Property<Guid>("StudentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RollCallId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("StudentId", "RollCallId");

                    b.HasIndex("RollCallId");

                    b.HasIndex("StudentId", "RollCallId");

                    b.ToTable("StudentRollCalls");
                });

            modelBuilder.Entity("AttendanceStudent.Models.Subject", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.ToTable("Subjects");
                });

            modelBuilder.Entity("AttendanceStudent.Models.AttendanceLog", b =>
                {
                    b.HasOne("AttendanceStudent.Models.RollCall", "RollCall")
                        .WithMany("AttendanceLogs")
                        .HasForeignKey("RollCallId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RollCall");
                });

            modelBuilder.Entity("AttendanceStudent.Models.AttendanceLogImage", b =>
                {
                    b.HasOne("AttendanceStudent.Models.AttendanceLog", "AttendanceLog")
                        .WithMany("LogImages")
                        .HasForeignKey("AttendanceLogId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AttendanceLog");
                });

            modelBuilder.Entity("AttendanceStudent.Models.AttendanceStudent", b =>
                {
                    b.HasOne("AttendanceStudent.Models.AttendanceLog", "AttendanceLog")
                        .WithMany("AttendanceStudents")
                        .HasForeignKey("AttendanceLogId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AttendanceStudent.Models.Student", "Student")
                        .WithMany("AttendanceStudents")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AttendanceLog");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("AttendanceStudent.Models.RollCall", b =>
                {
                    b.HasOne("AttendanceStudent.Models.Class", "Class")
                        .WithMany("RollCalls")
                        .HasForeignKey("ClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AttendanceStudent.Models.Subject", "Subject")
                        .WithMany("RollCalls")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Class");

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("AttendanceStudent.Models.StudentImage", b =>
                {
                    b.HasOne("AttendanceStudent.Models.Student", "Student")
                        .WithMany("Images")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Student");
                });

            modelBuilder.Entity("AttendanceStudent.Models.StudentRollCall", b =>
                {
                    b.HasOne("AttendanceStudent.Models.RollCall", "RollCall")
                        .WithMany("StudentRollCalls")
                        .HasForeignKey("RollCallId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AttendanceStudent.Models.Student", "Student")
                        .WithMany("StudentRollCalls")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RollCall");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("AttendanceStudent.Models.AttendanceLog", b =>
                {
                    b.Navigation("AttendanceStudents");

                    b.Navigation("LogImages");
                });

            modelBuilder.Entity("AttendanceStudent.Models.Class", b =>
                {
                    b.Navigation("RollCalls");
                });

            modelBuilder.Entity("AttendanceStudent.Models.RollCall", b =>
                {
                    b.Navigation("AttendanceLogs");

                    b.Navigation("StudentRollCalls");
                });

            modelBuilder.Entity("AttendanceStudent.Models.Student", b =>
                {
                    b.Navigation("AttendanceStudents");

                    b.Navigation("Images");

                    b.Navigation("StudentRollCalls");
                });

            modelBuilder.Entity("AttendanceStudent.Models.Subject", b =>
                {
                    b.Navigation("RollCalls");
                });
#pragma warning restore 612, 618
        }
    }
}
